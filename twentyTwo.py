# -*- coding: utf-8 -*-
__author__ = 'Apple'

########################################
#      使用with自动关闭资源              #
######################################

'''
    来做个简单的试验，观察一下发生的现象。在Python解释器中输入下面两行
    代码，会有什么情况的发生呢？
'''
f = open('test.txt','w')
print(f.write('test'))

'''
    这里需要使用with语句处理
    
    with open('test.txt','w') as f:
        f.write('test')
    上面的执行顺序为
    1）计算表达式的值，返回一个上下文管理器对象
    2）加载上下文管理器对象的__exit__()方法以备后用。
    3）调用上下文管理器对象的__enter__()对象
    4）如果with语句中设置了目标对象，则将__enter__()方法的返回值赋值
    给目标对象
    5）执行with中的代码块
    6）如果步骤5中代码正常结束，调用上下文管理器对象的__exit__()方法,其返回值
    直接忽略
'''